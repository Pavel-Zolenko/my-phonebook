{"version":3,"file":"static/js/698.d4cf610c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","redux/contacts/selectors.js","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@mui/material';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { FormStyled } from './ContactForm.styled';\n\nlet schema = yup.object().shape({\n  name: yup.string().min(3).required(),\n  number: yup.string().phone('UA').required(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      alert(`${values.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(values));\n\n    resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n  return (\n    // <Formik\n    //   initialValues={initialValues}\n    //   validationSchema={schema}\n    //   onSubmit={handleSubmit}\n    // >\n    //   <form>\n    //     <FormLabel htmlFor=\"name\">\n    //       Name\n    //       <Input\n    //         type=\"text\"\n    //         name=\"name\"\n    //         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    //         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    //         placeholder=\"Name\"\n    //         required\n    //       />\n    //       <FormError name=\"name\" />\n    //     </FormLabel>\n\n    //     <FormLabel htmlFor=\"number\">\n    //       Number\n    //       <Input\n    //         type=\"tel\"\n    //         name=\"number\"\n    //         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n    //         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n    //         placeholder=\"Number\"\n    //         required\n    //       />\n    //       <FormError name=\"number\" />\n    //     </FormLabel>\n    //     <AddBtn type=\"submit\">Add contact</AddBtn>\n    //   </form>\n    // </Formik>\n\n    <FormStyled onSubmit={formik.handleSubmit}>\n      <TextField\n        fullWidth\n        id=\"name\"\n        name=\"name\"\n        label=\"name\"\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n      <TextField\n        fullWidth\n        id=\"number\"\n        name=\"number\"\n        label=\"number\"\n        type=\"tel\"\n        value={formik.values.number}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.number && Boolean(formik.errors.number)}\n        helperText={formik.touched.number && formik.errors.number}\n      />\n\n      <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n        Add contact\n      </Button>\n    </FormStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nimport { ListItemText } from '@mui/material';\n\nexport const ListItemTextStyled = styled(ListItemText)`\n  color: ${p => p.theme.palette.text.primary};\n`;\n","import { PropTypes } from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { AccountCircle } from '@mui/icons-material';\nimport {\n  ListItemAvatar,\n  IconButton,\n  ListItem,\n  Tooltip,\n  Avatar,\n} from '@mui/material';\nimport { ListItemTextStyled } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number, phone }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ListItem\n      secondaryAction={\n        <Tooltip title=\"Delete\">\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      }\n    >\n      <ListItemAvatar>\n        <Avatar>\n          <AccountCircle />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemTextStyled primary={name} secondary={number || phone} />\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n};\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.filter);\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <ul>\n      {filteredContacts\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map(({ id, name, phone, number }) => (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            phone={phone}\n            number={number}\n          />\n        ))}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport { filterChange } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    dispatch(filterChange(event.currentTarget.value));\n  };\n\n  return (\n    <TextField\n      id=\"filled-search\"\n      label=\"Put the name for search\"\n      type=\"search\"\n      variant=\"filled\"\n      onChange={handleFilter}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"msgText\":\"Notification_msgText__Ij0Ua\"};","import PropTypes from 'prop-types';\nimport css from './Notification.module.css';\n\nexport function Notification({ msg }) {\n  return <p className={css.msgText}>{msg}</p>;\n}\n\nNotification.propTypes = {\n  msg: PropTypes.string.isRequired,\n};","export const getContacts = state => state.contacts.contacts;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getStatusFilter = state => state.filter;","import styled from '@emotion/styled';\nimport { Box, Typography } from '@mui/material';\n\nexport const WrapPage = styled(Box)`\n  padding: 60px 10px;\n  height: 100dvh;\n`;\n\nexport const MainBox = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin: 0 auto;\n  max-width: 350px;\n\n  padding: 12px;\n  border-radius: 16px;\n  background-color: ${p => p.theme.palette.background.secondary};\n`;\n\nexport const TypographyStyled = styled(Typography)`\n  font-weight: 700;\n  text-align: center;\n  color: ${p => p.theme.palette.text.primary};\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Notification } from 'components/Notification/Notification';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\n\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { MainBox, TypographyStyled, WrapPage } from './ContactsPage.styled';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <WrapPage>\n      <MainBox>\n        <Toaster position=\"top-center\" reverseOrder={false} />\n\n        <TypographyStyled variant=\"h4\" component=\"h1\">\n          Phonebook\n        </TypographyStyled>\n\n        <ContactForm />\n\n        <TypographyStyled variant=\"h5\" component=\"h2\">\n          Contacts\n        </TypographyStyled>\n\n        {contacts.length > 0 || filter ? (\n          <Filter />\n        ) : (\n          <Notification msg=\"No contacts added\" />\n        )}\n        {isLoading && !error && <b>Request in progress...</b>}\n\n        <ContactList />\n      </MainBox>\n    </WrapPage>\n  );\n}\n"],"names":["FormStyled","styled","schema","yup","shape","name","min","required","number","phone","ContactForm","dispatch","useDispatch","contacts","useSelector","state","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","some","contact","toLowerCase","alert","addContact","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","type","Button","color","variant","ListItemTextStyled","ListItemText","p","theme","palette","text","primary","ContactItem","ListItem","secondaryAction","Tooltip","title","IconButton","edge","onClick","deleteContact","Delete","ListItemAvatar","Avatar","AccountCircle","secondary","ContactList","normalizedFilter","filter","filteredContacts","includes","sort","a","b","localeCompare","map","Filter","event","filterChange","currentTarget","Notification","msg","className","css","getIsLoading","isLoading","getError","WrapPage","Box","MainBox","background","TypographyStyled","Typography","ContactsPage","useEffect","fetchContacts","position","reverseOrder","component","length"],"sourceRoot":""}